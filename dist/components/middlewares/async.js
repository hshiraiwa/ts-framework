"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util = require("util");
const asyncMiddleware = (method, route, functions) => {
    let fns = functions;
    // Ensure input as an array
    if (!util.isArray(fns)) {
        fns = [fns];
    }
    if (process.env.NEWRELIC_ENABLED === "true") {
        const newRelicRouteNameMiddleware = (req, res, next) => {
            require("newrelic").setTransactionName(`${method} ${route}`);
            next();
        };
        fns = [newRelicRouteNameMiddleware, ...fns];
    }
    // Map the array of filters and controllers with a Promise wrapper for express error handling
    return fns.map(fn => (req, res, next) => {
        if (!util.isFunction(fn)) {
            let msg = "Async middleware cannot wrap something that is not a function, got " + typeof fn + "";
            if (util.isString(fn)) {
                msg = `${msg}: "${fn}"`;
            }
            throw new Error(msg);
        }
        try {
            return Promise.resolve(fn(req, res, next)).catch(next);
        }
        catch (error) {
            next(error);
        }
    });
};
exports.default = asyncMiddleware;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXN5bmMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvY29tcG9uZW50cy9taWRkbGV3YXJlcy9hc3luYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZCQUE2QjtBQUc3QixNQUFNLGVBQWUsR0FBRyxDQUFDLE1BQWMsRUFBRSxLQUFhLEVBQUUsU0FBZ0MsRUFBRSxFQUFFO0lBQzFGLElBQUksR0FBRyxHQUFHLFNBQVMsQ0FBQztJQUVwQiwyQkFBMkI7SUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDdEIsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDYjtJQUVELElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsS0FBSyxNQUFNLEVBQUU7UUFDM0MsTUFBTSwyQkFBMkIsR0FBRyxDQUFDLEdBQVksRUFBRSxHQUFhLEVBQUUsSUFBUyxFQUFFLEVBQUU7WUFDN0UsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsTUFBTSxJQUFJLEtBQUssRUFBRSxDQUFDLENBQUM7WUFDN0QsSUFBSSxFQUFFLENBQUM7UUFDVCxDQUFDLENBQUM7UUFDRixHQUFHLEdBQUcsQ0FBQywyQkFBMkIsRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0tBQzdDO0lBQ0QsNkZBQTZGO0lBQzdGLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBWSxFQUFFLEdBQWEsRUFBRSxJQUFTLEVBQUUsRUFBRTtRQUM5RCxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBRTtZQUN4QixJQUFJLEdBQUcsR0FBRyxxRUFBcUUsR0FBRyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUM7WUFDakcsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxFQUFFO2dCQUNyQixHQUFHLEdBQUcsR0FBRyxHQUFHLE1BQU0sRUFBRSxHQUFHLENBQUM7YUFDekI7WUFDRCxNQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ3RCO1FBQ0QsSUFBSTtZQUNGLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN4RDtRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ2I7SUFDSCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQztBQUVGLGtCQUFlLGVBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHV0aWwgZnJvbSBcInV0aWxcIjtcbmltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSBcImV4cHJlc3NcIjtcblxuY29uc3QgYXN5bmNNaWRkbGV3YXJlID0gKG1ldGhvZDogc3RyaW5nLCByb3V0ZTogc3RyaW5nLCBmdW5jdGlvbnM6IEZ1bmN0aW9uIHwgRnVuY3Rpb25bXSkgPT4ge1xuICBsZXQgZm5zID0gZnVuY3Rpb25zO1xuXG4gIC8vIEVuc3VyZSBpbnB1dCBhcyBhbiBhcnJheVxuICBpZiAoIXV0aWwuaXNBcnJheShmbnMpKSB7XG4gICAgZm5zID0gW2Zuc107XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTkVXUkVMSUNfRU5BQkxFRCA9PT0gXCJ0cnVlXCIpIHtcbiAgICBjb25zdCBuZXdSZWxpY1JvdXRlTmFtZU1pZGRsZXdhcmUgPSAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlLCBuZXh0OiBhbnkpID0+IHtcbiAgICAgIHJlcXVpcmUoXCJuZXdyZWxpY1wiKS5zZXRUcmFuc2FjdGlvbk5hbWUoYCR7bWV0aG9kfSAke3JvdXRlfWApO1xuICAgICAgbmV4dCgpO1xuICAgIH07XG4gICAgZm5zID0gW25ld1JlbGljUm91dGVOYW1lTWlkZGxld2FyZSwgLi4uZm5zXTtcbiAgfVxuICAvLyBNYXAgdGhlIGFycmF5IG9mIGZpbHRlcnMgYW5kIGNvbnRyb2xsZXJzIHdpdGggYSBQcm9taXNlIHdyYXBwZXIgZm9yIGV4cHJlc3MgZXJyb3IgaGFuZGxpbmdcbiAgcmV0dXJuIGZucy5tYXAoZm4gPT4gKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSwgbmV4dDogYW55KSA9PiB7XG4gICAgaWYgKCF1dGlsLmlzRnVuY3Rpb24oZm4pKSB7XG4gICAgICBsZXQgbXNnID0gXCJBc3luYyBtaWRkbGV3YXJlIGNhbm5vdCB3cmFwIHNvbWV0aGluZyB0aGF0IGlzIG5vdCBhIGZ1bmN0aW9uLCBnb3QgXCIgKyB0eXBlb2YgZm4gKyBcIlwiO1xuICAgICAgaWYgKHV0aWwuaXNTdHJpbmcoZm4pKSB7XG4gICAgICAgIG1zZyA9IGAke21zZ306IFwiJHtmbn1cImA7XG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZm4ocmVxLCByZXMsIG5leHQpKS5jYXRjaChuZXh0KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgbmV4dChlcnJvcik7XG4gICAgfVxuICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jTWlkZGxld2FyZTtcbiJdfQ==